<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class T_channel_payment_model extends CI_Model {
   public $id;	
   function __construct(){
        parent::__construct();
   }	
	
	public function json(){
		$this->datatables->select('
			t_channel_payment.id as id,
			t_channel_payment.nama_channel as nama_channel,
			t_channel_payment.desc as desc,
			t_channel_payment.image as image,
			t_channel_payment.category as category,
		');
		
		$this->datatables->from('t_channel_payment');

		
		
		//mengembalikan dalam bentuk array
		$q =  json_decode($this->datatables->generate(),true);
		return $q;
	}
	

   public function get_all(){
		$afield = array(
			't_channel_payment.id as id',
			't_channel_payment.nama_channel as nama_channel',
			't_channel_payment.desc as desc',
			't_channel_payment.image as image',
			't_channel_payment.category as category',
		
		);
		$this->db->select($afield);

		$this->db->order_by('t_channel_payment.id', 'ASC');
		return $this->db->get('t_channel_payment')->result_array();
   }


	public function get_by_id($id){
		$afield = array(
			't_channel_payment.id as id',
			't_channel_payment.nama_channel as nama_channel',
			't_channel_payment.desc as desc',
			't_channel_payment.image as image',
			't_channel_payment.category as category',
		
		);
		$this->db->select($afield);

		$this->db->where('t_channel_payment.id', $id);
		$this->db->order_by('t_channel_payment.id', 'ASC');
		return $this->db->get('t_channel_payment')->row();
   }


	/* Memastikan data yg dibuat tidak kembar/sama,
	   fungsi ini sebagai pengganti fungsi primary key dr db,
	   krn primary key sudah di gunakan untuk column id.
	   -create : id di kosongkan.
	   -update : id di isi dengan id data yg di proses.	
	*/	
	function if_exist($id,$data){
		$this->db->where('t_channel_payment.id <>',$id);

		$q = $this->db->get_where('t_channel_payment', $data)->result_array();
		
		if(count($q)>0){
			return true;
		}else{
			return false;
		}		

	

	}


	function insert($data){
	
	    /* transaction rollback */
		$this->db->trans_start();
		
		$this->db->insert('t_channel_payment', $data);		
		/* id primary yg baru saja di input*/
		$this->id = $this->db->insert_id(); 
		
		$this->db->trans_complete();
		return $this->db->trans_status(); //return true or false
	}

	function update($id,$data){

		/* transaction rollback */
		$this->db->trans_start();

		$this->db->where('t_channel_payment.id', $id);
		$this->db->update('t_channel_payment', $data);
		
		$this->db->trans_complete();
		return $this->db->trans_status(); //return true or false	
	}

	function delete_multiple($data){
		/* transaction rollback */
		$this->db->trans_start();
		
		if(!empty($data)){
			$this->db->where_in('t_channel_payment.id',$data);	
	
			$this->db->delete('t_channel_payment');
		}
		
		$this->db->trans_complete();
		return $this->db->trans_status(); //return true or false	
		
	}


};

/* END */
/* Mohon untuk tidak mengubah informasi ini : */
/* Generated by YBS CRUD Generator 2021-09-28 09:05:19 */
/* contact : YAP BRIDGING SYSTEM 		*/
/*			 bridging.system@gmail.com  */
/* 			 MAKASSAR CITY, INDONESIAN 	*/
